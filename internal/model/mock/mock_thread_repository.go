// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/atjhoendz/notpushcation-service/internal/model (interfaces: ThreadRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/atjhoendz/notpushcation-service/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockThreadRepository is a mock of ThreadRepository interface.
type MockThreadRepository struct {
	ctrl     *gomock.Controller
	recorder *MockThreadRepositoryMockRecorder
}

// MockThreadRepositoryMockRecorder is the mock recorder for MockThreadRepository.
type MockThreadRepositoryMockRecorder struct {
	mock *MockThreadRepository
}

// NewMockThreadRepository creates a new mock instance.
func NewMockThreadRepository(ctrl *gomock.Controller) *MockThreadRepository {
	mock := &MockThreadRepository{ctrl: ctrl}
	mock.recorder = &MockThreadRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThreadRepository) EXPECT() *MockThreadRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockThreadRepository) Create(arg0 context.Context, arg1 *model.Thread) (*model.Thread, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*model.Thread)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockThreadRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockThreadRepository)(nil).Create), arg0, arg1)
}

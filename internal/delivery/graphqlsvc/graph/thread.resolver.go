package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/kumparan/go-utils"
	log "github.com/sirupsen/logrus"

	"github.com/atjhoendz/notpushcation-service/internal/model"
)

// CreateThread is the resolver for the createThread field.
func (r *mutationResolver) CreateThread(ctx context.Context, input model.CreateThreadInput) (bool, error) {
	logger := log.WithFields(log.Fields{
		"ctx":   utils.DumpIncomingContext(ctx),
		"input": utils.Dump(input),
	})

	res, err := r.ThreadUsecase.Create(ctx, input)
	if err != nil {
		logger.Error(err)
		return false, err
	}

	logger.WithField("res", utils.Dump(res)).Info("result")

	return true, nil
}
